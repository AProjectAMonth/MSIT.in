# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-14 16:17
from __future__ import unicode_literals

import ckeditor_uploader.fields
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import functools
import web.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dept', models.CharField(choices=[('All', 'All'), ('CSE', 'CSE'), ('IT', 'IT'), ('ECE', 'ECE'), ('EEE', 'EEE'), ('APPLIED SCIENCES', 'Applied Sciences')], max_length=10, verbose_name='Department')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'All User',
                'verbose_name_plural': 'All Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Tab Name', max_length=50)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Page - Achievement',
                'verbose_name_plural': 'Page - Achievements',
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Batch Name', max_length=50)),
                ('department', models.CharField(blank=True, choices=[('CSE', 'CSE'), ('IT', 'IT'), ('ECE', 'ECE'), ('EEE', 'EEE'), ('APPLIED SCIENCES', 'Applied Sciences')], help_text='Department Name', max_length=30, null=True)),
                ('shift', models.CharField(choices=[('M', 'Morning'), ('E', 'Evening')], max_length=1)),
                ('semester', models.CharField(blank=True, choices=[('1', 'I'), ('2', 'II'), ('3', 'III'), ('4', 'IV'), ('5', 'V'), ('6', 'VI'), ('7', 'VII'), ('8', 'VIII')], max_length=1, null=True)),
                ('pdf', models.FileField(upload_to=functools.partial(web.models.wrapper, *(), **{b'field': 'title', b'folder': 'attendance'}))),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Content - Attendance',
                'verbose_name_plural': 'Content - Attendance',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(choices=[('CSE', 'CSE'), ('IT', 'IT'), ('ECE', 'ECE'), ('EEE', 'EEE'), ('APPLIED SCIENCES', 'Applied Sciences')], default='CSE', help_text='Depaertment Name', max_length=30, unique=True)),
                ('display_1st_faculty', models.BooleanField(default=True, help_text='Check if the list of faculties is to be displayed on the website', verbose_name='Display 1st shift Faculty')),
                ('display_1st_assistant', models.BooleanField(default=False, help_text='Check if the list of Lab Assistants is to be displayed on the website', verbose_name='Display 1st shift Lab Assistants')),
                ('display_2nd_faculty', models.BooleanField(default=True, help_text='Check if the list of faculties is to be displayed on the website', verbose_name='Display 2nd shift Faculty')),
                ('display_2nd_assistant', models.BooleanField(default=False, help_text='Check if the list of Lab Assistants is to be displayed on the website', verbose_name='Display 2nd shift Lab Assistants')),
                ('sort_faculty', models.CharField(choices=[('1', 'Name wise'), ('2', 'Designation wise'), ('3', 'Date-of-joining wise')], default='1', max_length=1, verbose_name='Faculty Sorting Criteria')),
                ('sorting_order', models.CharField(choices=[('1', 'Ascending'), ('2', 'Descending')], default='2', max_length=1, verbose_name='Faculty Sorting Order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=70)),
                ('order', models.PositiveIntegerField()),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Department')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Tab Name', max_length=50)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Page - Event',
                'verbose_name_plural': 'Page - Events',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('1', 'Mr.'), ('2', 'Mrs.'), ('3', 'Ms'), ('4', 'Miss'), ('5', 'Master'), ('6', 'Dr')], default=1, max_length=1)),
                ('full_name', models.CharField(max_length=200, verbose_name='Full Name')),
                ('qualifications', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to=functools.partial(web.models.wrapper, *(), **{b'field': 'full_name', b'folder': 'faculty'}))),
                ('category', models.CharField(choices=[('teaching', 'Teaching Faculty'), ('assistant', 'Lab Assistant')], default='teaching', max_length=30)),
                ('designation', models.CharField(choices=[('1Professor', 'Professor'), ('2Assistant Professor', 'Assistant Professor'), ('2Associate Professor', 'Associate Professor'), ('3Reader', 'Reader')], max_length=30)),
                ('phone_number', models.CharField(blank=True, help_text='Phone Number (without Regional Code)', max_length=10, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('shift', models.CharField(choices=[('M', 'Morning'), ('E', 'Evening')], default='M', help_text='Morning or Evening', max_length=1, verbose_name='Shift')),
                ('department', models.CharField(blank=True, choices=[('CSE', 'CSE'), ('IT', 'IT'), ('ECE', 'ECE'), ('EEE', 'EEE'), ('APPLIED SCIENCES', 'Applied Sciences')], max_length=30, null=True)),
                ('date_of_joining', models.DateField(blank=True, null=True, verbose_name='Date Of Joining')),
                ('experience', models.CharField(blank=True, max_length=200, null=True, verbose_name='Experience')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Faculty',
                'verbose_name_plural': 'Faculties',
            },
        ),
        migrations.CreateModel(
            name='LatestNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Text to display', max_length=250)),
                ('link', models.CharField(blank=True, help_text='Link for the News', max_length=1000, null=True)),
                ('files', models.FileField(blank=True, null=True, upload_to=functools.partial(web.models.wrapper, *(), **{b'field': 'title', b'folder': 'news'}))),
                ('new', models.BooleanField(default=True, help_text='This places a New Flag on th link')),
                ('visible', models.BooleanField(default=True, help_text='Whether the News is Visible on Main Page')),
                ('additional_title', models.CharField(blank=True, help_text='Additional Link Title (if any)', max_length=50, null=True)),
                ('additional_link', models.CharField(blank=True, help_text='Additional Link (if any)', max_length=1000, null=True)),
                ('additional_files', models.FileField(blank=True, null=True, upload_to=functools.partial(web.models.wrapper, *(), **{b'field': 'title', b'folder': 'news'}))),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Right - Latest News',
                'verbose_name_plural': 'Right - Latest News',
            },
        ),
        migrations.CreateModel(
            name='Marquee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Text to show in the Marquee', max_length=50, verbose_name='Link Title')),
                ('link', models.CharField(blank=True, help_text='Link to redirect to', max_length=1000, null=True)),
                ('files', models.FileField(blank=True, null=True, upload_to=functools.partial(web.models.wrapper, *(), **{b'field': 'title', b'folder': 'marquee'}))),
                ('order', models.PositiveIntegerField(blank=True, default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Sliding Text',
                'verbose_name_plural': 'Sliding Text',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Text to display', max_length=250)),
                ('link', models.CharField(blank=True, help_text='Link for the Notice', max_length=1000, null=True)),
                ('files', models.FileField(blank=True, null=True, upload_to=functools.partial(web.models.wrapper, *(), **{b'field': 'title', b'folder': 'notices'}))),
                ('new', models.BooleanField(default=True, help_text='This places a New Flag on th link')),
                ('visible', models.BooleanField(default=True, help_text='Whether the News is Visible on Main Page')),
                ('additional_title', models.CharField(blank=True, help_text='Additional Link Title (if any)', max_length=50, null=True)),
                ('additional_link', models.CharField(blank=True, help_text='Additional Link (if any)', max_length=1000, null=True)),
                ('additional_files', models.FileField(blank=True, null=True, upload_to=functools.partial(web.models.wrapper, *(), **{b'field': 'title', b'folder': 'notices'}))),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Right - Notice',
                'verbose_name_plural': 'Right - Notices',
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=70)),
                ('link', models.CharField(max_length=500, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Page - All Other',
                'verbose_name_plural': 'Page - All Others',
            },
        ),
        migrations.CreateModel(
            name='PrimaryMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('order', models.PositiveSmallIntegerField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Menu - Left',
                'verbose_name_plural': 'Menu - Left',
            },
        ),
        migrations.CreateModel(
            name='PrimaryNavigationMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Text to show in the Navigation', max_length=50, verbose_name='Link Title')),
                ('link', models.CharField(blank=True, help_text='Link to redirect to', max_length=1000, null=True)),
                ('files', models.FileField(blank=True, null=True, upload_to=functools.partial(web.models.wrapper, *(), **{b'field': 'title', b'folder': 'navigations'}))),
                ('order', models.PositiveIntegerField(blank=True, default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Menu - Top',
                'verbose_name_plural': 'Menu - Top',
            },
        ),
        migrations.CreateModel(
            name='SecondaryMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('order', models.PositiveSmallIntegerField()),
                ('link', models.CharField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.PrimaryMenu')),
            ],
            options={
                'verbose_name': 'Menu - Secondary',
                'verbose_name_plural': 'Menu - Secondary',
            },
        ),
        migrations.CreateModel(
            name='SecondaryNavigationMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Text to show in the Navigation', max_length=50, verbose_name='Link Title')),
                ('link', models.CharField(blank=True, help_text='Link to redirect to', max_length=1000, null=True)),
                ('files', models.FileField(blank=True, null=True, upload_to=functools.partial(web.models.wrapper, *(), **{b'field': 'title', b'folder': 'navigations'}))),
                ('order', models.PositiveIntegerField(blank=True, default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Menu - Secondary',
                'verbose_name_plural': 'Menu - Secondary',
            },
        ),
        migrations.CreateModel(
            name='StudentSociety',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Society Name', max_length=50)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Page - Society',
                'verbose_name_plural': 'Page - Societies',
            },
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='text to display', max_length=100)),
                ('department', models.CharField(choices=[('CSE', 'CSE'), ('IT', 'IT'), ('ECE', 'ECE'), ('EEE', 'EEE'), ('APPLIED SCIENCES', 'Applied Sciences')], help_text='Department Name', max_length=30)),
                ('semester', models.CharField(blank=True, choices=[('1', 'I'), ('2', 'II'), ('3', 'III'), ('4', 'IV'), ('5', 'V'), ('6', 'VI'), ('7', 'VII'), ('8', 'VIII')], max_length=1, null=True)),
                ('syllabus', models.FileField(upload_to=functools.partial(web.models.wrapper, *(), **{b'field': 'title', b'folder': 'syllabus'}))),
                ('lecture_plan', models.FileField(upload_to=web.models.image_name)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Content - Syllabus',
                'verbose_name_plural': 'Content - Syllabus',
            },
        ),
        migrations.CreateModel(
            name='Tab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=70)),
                ('order', models.PositiveIntegerField()),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Page')),
            ],
        ),
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Batch Name', max_length=50)),
                ('department', models.CharField(blank=True, choices=[('CSE', 'CSE'), ('IT', 'IT'), ('ECE', 'ECE'), ('EEE', 'EEE'), ('APPLIED SCIENCES', 'Applied Sciences')], help_text='Department Name', max_length=30, null=True)),
                ('shift', models.CharField(choices=[('M', 'Morning'), ('E', 'Evening')], max_length=1)),
                ('semester', models.CharField(blank=True, choices=[('1', 'I'), ('2', 'II'), ('3', 'III'), ('4', 'IV'), ('5', 'V'), ('6', 'VI'), ('7', 'VII'), ('8', 'VIII')], max_length=1, null=True)),
                ('pdf', models.FileField(upload_to=functools.partial(web.models.wrapper, *(), **{b'field': 'title', b'folder': 'timetable'}))),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Content - Time Table',
                'verbose_name_plural': 'Content - Time Tables',
            },
        ),
    ]
